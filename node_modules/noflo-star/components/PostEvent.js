// Generated by CoffeeScript 1.5.0
(function() {
  var PostEvent, noflo,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  noflo = require('noflo');

  PostEvent = (function(_super) {

    __extends(PostEvent, _super);

    function PostEvent() {
      var _this = this;
      this.from = null;
      this.to = null;
      this.inPorts = {
        from: new noflo.Port,
        to: new noflo.Port
      };
      this.outPorts = {
        out: new noflo.Port,
        error: new noflo.Port
      };
      this.inPorts.from.on('data', function(data) {
        _this.from = data;
        if (_this.to) {
          return _this.post();
        }
      });
      this.inPorts.to.on('data', function(data) {
        _this.to = data;
        if (_this.from) {
          return _this.post();
        }
      });
    }

    PostEvent.prototype.post = function() {
      this.outPorts.out.send(this.to);
      return this.outPorts.out.disconnect();
    };

    return PostEvent;

  })(noflo.Component);

  exports.getComponent = function() {
    return new PostEvent;
  };

}).call(this);
